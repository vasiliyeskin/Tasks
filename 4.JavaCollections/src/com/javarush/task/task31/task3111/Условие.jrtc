<div class="wdghtml" taskKey="com.javarush.task.task31.task3111">
<h3>Продвинутый поиск файлов</h3>
<p>Давай реализуем настраиваемый поиск файлов в директории.<br />
Просмотри интерфейс <em><strong>java.nio.file.FileVisitor</strong></em> и его базовую реализацию <em><strong>java.nio.file.SimpleFileVisitor</strong></em>.<br />
Во время поиска по дереву файлов с помощью метода <mark>Files.walkFileTree(Path <strong>start</strong>, FileVisitor&lt;? super Path&gt; <strong>visitor</strong>)</mark><br />
мы используем объект <mark class="green">FileVisitor</mark> для выполнения необходимых операций над найденными объектами <span class="text-corporate">и</span>.</p>
<p>Наш класс для поиска будет называться <strong><span class="text-corporate">SearchFileVisitor</span></strong> и расширять <span class="text-corporate"><strong>SimpleFileVisitor</strong></span>.</p>
<p>Поиск можно будет выполнять по таким критериям:<br />
&#8212; выражение, встречающееся в названии файла (<span class="text-corporate">String</span>);<br />
&#8212; выражение, встречающееся в содержимом файла (<span class="text-corporate">String</span>);<br />
&#8212; максимальный и минимальный размер файла (<span class="text-corporate">int</span>).<br />
Можно задавать либо один, либо сразу несколько критериев для поиска.</p>
<p>Я в <mark>main</mark> написал код, который использует готовый <mark>SearchFileVisitor</mark> для поиска файлов, тебе осталась совсем легкая задача &#8212; выполнить его реализацию.<br />
<strong>Подсказка 1</strong>: методы <mark>get</mark>&#8230; , <mark>set</mark>&#8230; &#8212; это геттеры и сеттеры полей. Основная логика класса по поиску выполняется в методе <mark>visitFile(Path <strong>file</strong>, BasicFileAttributes <strong>attrs</strong>)</mark>.<br />
<strong>Подсказка 2</strong>: для работы с файлами используй только классы из пакета <em><strong>java.nio</strong></em>.</p>

</div>
